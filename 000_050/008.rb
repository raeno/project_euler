#Find the greatest product of five consecutive digits in the 1000-digit number
require "test/unit"

class TestProblem_8 < Test::Unit::TestCase

	def find_greatest_product_of_five_consequtive_digits
		number = 	'7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615
					60789112949495459501737958331952853208805511125406987471585238630507156932909632952274430435576689664895044524452316
					17318564030987111217223831136222989342338030813533627661428280644448664523874930358907296290491560440772390713810515
					85930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258
					49077116705560136048395864467063244157221553975369781797784617406495514929086256932197846862248283972241375657056057
					49026140797296865241453510047482166370484403199890008895243450658541227588666881164271714799244429282308634656748139
					19123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807
					19840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606058861164671094050
					7754100225698315520005593572972571636269561882670428252483600823257530420752963450'

		number =  number.gsub(/\n/,'')
		(0..number.length-5).map { |i| number[i,5].chars.map(&:to_i).reduce(&:*)}.max
	end

	def test_greatest_product_of_five_consequtive_digits_in_a_bignumber
		greatest_product = find_greatest_product_of_five_consequtive_digits
		assert_equal(40824, greatest_product)
	end
end